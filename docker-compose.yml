version: "2.1"

x-s6-service: &s6-service
  restart: "on-failure"
  tmpfs:
    - /tmp
  environment: &s6-environment
    S6_VERBOSITY: 2
    PUID: "1000"
    PGID: "1000"
  entrypoint:
    - /bin/bash
    - -c
  command:
    - |
      if [[ ${DISABLE,,} =~ true|yes|on|1 ]]; then
        echo "DISABLE is truthy, exiting..."
        exit 0
      fi
      exec /init

volumes:
  downloads: {}
  duplicati: {}
  jellyfin: {}
  letsencrypt: {}
  netdatalib: {}
  netdatacache: {}
  nzbhydra: {}
  ombi: {}
  overseerr: {}
  plex: {}
  prowlarr: {}
  proxy: {}
  radarr: {}
  sabnzbd: {}
  sonarr: {}
  syncthing: {}
  tautulli: {}
  tailscale: {}
  tsdproxy: {}
services:

  # # https://hub.docker.com/r/tailscale/tailscale
  # # https://github.com/tailscale/tailscale/blob/main/cmd/containerboot/main.go
  # # https://tailscale.com/kb/1282/docker
  # # https://tailscale.com/kb/1278/tailscaled
  # # https://tailscale.com/kb/1241/tailscale-up
  # # https://tailscale.com/kb/1242/tailscale-serve
  # # https://tailscale.com/kb/1311/tailscale-funnel
  # # https://tailscale.com/blog/docker-tailscale-guide
  # tailscale:
  #   build: tailscale
  #   restart: "on-failure"
  #   cap_add:
  #     - NET_ADMIN
  #     - SYS_MODULE
  #   labels:
  #     io.balena.features.kernel-modules: 1
  #   environment:
  #     TS_HOSTNAME: mediaserver
  #   volumes:
  #     - tailscale:/var/lib/tailscale
  #   network_mode: host

  tsdproxy:
    build: tsdproxy
    labels:
      io.balena.features.balena-socket: 1
    volumes:
      - tsdproxy:/data

  # https://hub.docker.com/r/jc21/nginx-proxy-manager
  # https://github.com/NginxProxyManager/nginx-proxy-manager
  # https://nginxproxymanager.com/
  nginx:
    <<: *s6-service
    image: jc21/nginx-proxy-manager:2.12.1@sha256:b7168e5f6828cbbd3622fa19965007e4611cf42b5f3c603008377ffd45a4fe00
    volumes:
      - proxy:/data
      - letsencrypt:/etc/letsencrypt
    ports:
      - 80:80/tcp
      - 443:443/tcp
      - 127.0.0.1:81:81/tcp
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "nginx"
      tsdproxy.container_port: 81

  # https://docs.linuxserver.io/images/docker-duplicati
  duplicati:
    <<: *s6-service
    image: lscr.io/linuxserver/duplicati:2.1.0@sha256:4c43aac1522bcbd5eb47686b9a1cf3a8a4982182223907af84372a9c9d557046
    environment:
      <<: *s6-environment
      PUID: "0"
      PGID: "0"
    volumes:
      - duplicati:/config
      # any volumes that might be worth backing up
      - syncthing:/volumes/syncthing
      - plex:/volumes/plex
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - letsencrypt:/volumes/letsencrypt
      - tautulli:/volumes/tautulli
    ports:
      - 127.0.0.1:8200:8200/tcp
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "duplicati"
      tsdproxy.container_port: 8200

  # https://docs.linuxserver.io/images/docker-jellyfin
  jellyfin:
    <<: *s6-service
    image: lscr.io/linuxserver/jellyfin:10.10.3@sha256:97bb454710cc1d02ef2c750b57e4c4e9c6d2dbb3e849f405b37c5127f47b7d4c
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - jellyfin:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:8096:8096/tcp

  # https://docs.linuxserver.io/images/docker-nzbhydra
  nzbhydra:
    <<: *s6-service
    image: lscr.io/linuxserver/nzbhydra2:7.10.1@sha256:b11235f793bfd2d782a09c292e23fe4987f6f68923746b8288872063bf22ab27
    volumes:
      - nzbhydra:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:5076:5076/tcp

  # https://docs.linuxserver.io/images/docker-ombi
  ombi:
    <<: *s6-service
    image: lscr.io/linuxserver/ombi:4.44.1@sha256:d76c9dd437b295f5b1e2937392e18067eb481c9a8d59890c76c7ca04ca2c831a
    volumes:
      - ombi:/config
    ports:
      - 127.0.0.1:3579:3579/tcp

  # https://docs.linuxserver.io/images/docker-overseerr
  overseerr:
    <<: *s6-service
    image: lscr.io/linuxserver/overseerr:1.33.2@sha256:54cd6f5510c781a385c4d471364402d9cc5ecefad2728f32dd150d9333f67a65
    volumes:
      - overseerr:/config
    ports:
      - 127.0.0.1:5055:5055/tcp

  # https://docs.linuxserver.io/images/docker-plex
  plex:
    <<: *s6-service
    image: lscr.io/linuxserver/plex:1.41.2@sha256:8d72cf376b53c6e8338c51d6f3ee9747c3f73ec8585726e8eb3dbbe7f1f3188f
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - plex:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:32400:32400/tcp

  # https://docs.linuxserver.io/images/docker-prowlarr
  prowlarr:
    <<: *s6-service
    image: lscr.io/linuxserver/prowlarr:1.27.0-develop@sha256:006b7c8f63312b22e7d8a456cc210c114555d7f0e3570a4ac84d7b79819c8cff
    volumes:
      - prowlarr:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:9696:9696/tcp

  # https://docs.linuxserver.io/images/docker-radarr
  radarr:
    <<: *s6-service
    image: lscr.io/linuxserver/radarr:5.15.1@sha256:2e37ae0af799e01f413a97ee82c7e581a5b635816df0380889bc65d554dbeb17
    volumes:
      - radarr:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:7878:7878/tcp

  # https://docs.linuxserver.io/images/docker-sabnzbd
  sabnzbd:
    <<: *s6-service
    image: lscr.io/linuxserver/sabnzbd:4.3.3@sha256:1d31c01bb765cfbbe916b418b336223b07541e50065e6b4284f5ffb8ea452d12
    volumes:
      - sabnzbd:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:8080:8080/tcp

  # https://docs.linuxserver.io/images/docker-sonarr
  sonarr:
    <<: *s6-service
    image: lscr.io/linuxserver/sonarr:4.0.11@sha256:f1b771bf5f911ddb11aa86170ae27fab5ccde7d4671edcde6a3b264af8662945
    volumes:
      - sonarr:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:8989:8989/tcp

  # https://docs.linuxserver.io/images/docker-syncthing
  syncthing:
    <<: *s6-service
    image: lscr.io/linuxserver/syncthing:1.28.0@sha256:34edd556aaada725855f256b30fd94751ef4bdb45ddd6434c5f1dcaca8531747
    volumes:
      - syncthing:/config
      # any volumes that might be worth syncronizing between machines
      - plex:/volumes/plex
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - tautulli:/volumes/tautulli
    ports:
      - 127.0.0.1:8384:8384/tcp
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp

  # https://docs.linuxserver.io/images/docker-tautulli
  tautulli:
    <<: *s6-service
    image: lscr.io/linuxserver/tautulli:2.15.0@sha256:b2a2a615485103eb1e2b10bd0e29088be36b827495a643e433249c5dc945f1e6
    volumes:
      - tautulli:/config
    ports:
      - 127.0.0.1:8181:8181/tcp

  # https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata:v2.0.3@sha256:398529c0903a0b0922687b135defe6fc70a1f8fb9628b8053a045395ee09bbba
    restart: "on-failure"
    privileged: true
    cap_add:
      - SYS_PTRACE
    environment:
      DOCKER_HOST: "/var/run/balena.sock"
      PGID: "990" # ls -nd /var/run/balena.sock | awk '{print $4}'
    labels:
      io.balena.features.balena-socket: 1
      io.balena.features.procfs: 1
      io.balena.features.sysfs: 1
    security_opt:
      - apparmor:unconfined
    tmpfs:
      - /tmp
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
    ports:
      - 127.0.0.1:19999:19999/tcp
